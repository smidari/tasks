{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Task1/Task1.module.css","components/common/MyBtn/MyBtn.module.css","components/common/MyInput/MyInput.module.css","assets/task1.jpg","components/common/MyCheckBox/MyCheckBox.module.css","components/common/MyBtn/MyBtn.tsx","components/Navbar/MyNavbar.tsx","components/Task1/Task1.tsx","components/Task2/Task2.tsx","components/common/MyInput/MyInput.tsx","components/Task3/Task3.tsx","components/common/MyCheckBox/MyCheckBox.tsx","components/Task4/Task4.tsx","components/pages/PreJunior.tsx","components/pages/Junior.tsx","components/pages/JuniorPlus.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MyBtn","props","className","s","btn","styleBtn","btn_red","onClick","nameBtn","MyNavbar","useState","status","setStatus","Nav","sidenav","sidenav_open","sidenav_closed","map","item","index","key","to","activeClassName","active","Task1","Container","style","dialog","Row","Col","xs","md","avatar","Image","src","task1","alt","message","name","text","time","Task2","Table","striped","bordered","hover","sortToDo","toDo","id","n","p","removeToDo","MyInput","m","input","error","value","onChange","event","target","onKeyPress","Task3","arrNames","setArrNames","setName","toWelcomeOnClick","newNameForArr","v1","Object","keys","length","alert","toWelcome","InputGroup","e","Append","MyCheckBox","type","checkbox","checked","currentTarget","Task4","testInput","setTestInput","testCheckBox","setTestCheckBox","PreJunior","toDoArr","setToDo","arr","toDoArrSort","sort","a","b","filterTasks","filter","Junior","JuniorPlus","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.674645b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"Navbar_sidenav__39jMu\",\"sidenav_closed\":\"Navbar_sidenav_closed__3JJJl\",\"item\":\"Navbar_item__2Rj4q\",\"active\":\"Navbar_active__R68hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Task1_dialog__igOiP\",\"avatar\":\"Task1_avatar__38MPi\",\"message\":\"Task1_message__19SXB\",\"text\":\"Task1_text__1YGTE\",\"time\":\"Task1_time__3Y4Eb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__1wNxN\",\"btn_red\":\"MyBtn_btn_red__WNNM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"MyInput_input__T75wP\",\"error\":\"MyInput_error__24tNT\"};","module.exports = __webpack_public_path__ + \"static/media/task1.74055f83.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"MyCheckBox_checkbox__3ZGP9\"};","import React from \"react\";\r\nimport s from \"./MyBtn.module.css\"\r\n\r\ntype MyBtnType = {\r\n    onClick: () => void\r\n    nameBtn: string\r\n    styleBtn?: 'red'\r\n}\r\n\r\nconst MyBtn = (props: MyBtnType) => (\r\n    <button\r\n        className={`${s.btn} ${props.styleBtn === 'red' ? s.btn_red : ''}`}\r\n        onClick={props.onClick}\r\n    >{props.nameBtn}\r\n    </button>\r\n);\r\n\r\nexport default MyBtn;","import React, {useState} from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Nav} from \"react-bootstrap\";\r\nimport MyBtn from \"../common/MyBtn/MyBtn\";\r\n\r\nconst MyNavbar = () => {\r\n    const [status, setStatus] = useState<boolean>(false);\r\n    const openSideBar = () => setStatus(!status);\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.btn}>\r\n                <MyBtn onClick={openSideBar} nameBtn={`${status ? 'Close' : 'Open'}`}/>\r\n            </div>\r\n            <Nav className={`${s.sidenav} ${status ? s.sidenav_open : s.sidenav_closed}`}>\r\n                {['PreJunior', 'Junior', 'Junior+'].map((item, index) => {\r\n                    return (\r\n                        <NavLink\r\n                            key={index}\r\n                            to={`/${item}`}\r\n                            className={s.item}\r\n                            activeClassName={s.active}\r\n                        >{item}\r\n                        </NavLink>\r\n                    )\r\n                })}\r\n            </Nav>\r\n        </div>)\r\n};\r\n\r\nexport default MyNavbar;\r\n\r\n","import React from \"react\";\r\nimport style from \"./Task1.module.css\";\r\nimport {Container, Row, Image, Col} from \"react-bootstrap\";\r\nimport task1 from '../../assets/task1.jpg';\r\n\r\ntype Task1Type = {\r\n    name: string,\r\n    text: string,\r\n    time: string\r\n}\r\n\r\nconst Task1: React.FC<Task1Type> = props => (\r\n    <Container className={style.dialog}>\r\n        <h3>Task 1</h3>\r\n        <Row>\r\n            <Col xs={4} md={1} className={style.avatar}>\r\n                <Image\r\n                    src={task1}\r\n                    alt='avatar'/>\r\n            </Col>\r\n            <Col xs={6} md={3} className={style.message}>\r\n                <h6>{props.name}</h6>\r\n                <span className={style.text}>{props.text}</span>\r\n                <span className={style.time}>{props.time}</span>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default Task1;","import React from \"react\";\r\nimport {Col, Container, Row, Table} from \"react-bootstrap\";\r\nimport MyBtn from \"../common/MyBtn/MyBtn\";\r\nimport {toDoType} from \"../pages/PreJunior\";\r\n\r\ntype PropsType = {\r\n    toDo: Array<toDoType>\r\n    sortToDo: (arr: Array<toDoType>) => void\r\n    removeToDo: (id: number) => void\r\n}\r\n\r\nconst Task2: React.FC<PropsType> = props => {\r\n        return <Container>\r\n            <h3>Task 2</h3>\r\n            <Row>\r\n                <Col xs={4} md={1}>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Doings</th>\r\n                            <th><span onClick={() => props.sortToDo(props.toDo)}>Importance&#8597;</span></th>\r\n                            <th>Remove</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {props.toDo.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.n}</td>\r\n                                <td>{item.p}</td>\r\n                                <td><MyBtn onClick={() => props.removeToDo(item.id)} nameBtn={'remove'} styleBtn={'red'}/>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n;\r\n\r\nexport default Task2;","import React, {KeyboardEvent} from \"react\";\r\nimport m from \"./MyInput.module.css\"\r\n\r\ntype MyInputType = {\r\n    value: string\r\n    onChange: (e: string) => void\r\n    onKeyPress?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error?: boolean\r\n};\r\n\r\nconst MyInput = (props: MyInputType) => (\r\n    <input\r\n        className={`${m.input} ${props.error ? m.error : ''}`}\r\n        value={props.value}\r\n        onChange={event => props.onChange(event.target.value)}\r\n        onKeyPress={props.onKeyPress}/>\r\n);\r\n\r\nexport default MyInput;\r\n\r\n","import React, {useState, KeyboardEvent} from \"react\";\r\nimport {Col, Container, InputGroup, Row} from \"react-bootstrap\";\r\nimport {v1} from \"uuid\";\r\nimport MyInput from \"../common/MyInput/MyInput\";\r\nimport MyBtn from \"../common/MyBtn/MyBtn\";\r\n\r\nconst Task3 = () => {\r\n    let [arrNames, setArrNames] = useState([{}]);\r\n    let [name, setName] = useState('');\r\n\r\n    function toWelcome(name: string) {\r\n        if (name !== '') {\r\n            let newNameForArr = {id: v1(), name: name};\r\n            (Object.keys(arrNames[0]).length === 0) ?\r\n                setArrNames([newNameForArr]) :\r\n                setArrNames([newNameForArr, ...arrNames]);\r\n            alert(`Hello ${name}`);\r\n        }\r\n    }\r\n\r\n    function toWelcomeOnClick() {\r\n        toWelcome(name);\r\n        setName('');\r\n    }\r\n\r\n    function onNameKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\r\n        (e.key === \"Enter\") && toWelcomeOnClick()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h3>Task 3</h3>\r\n            <Row>\r\n                <Col xs={4} md={5}>\r\n                    <InputGroup className=\"mb-3\">\r\n                        < MyInput value={name} onChange={setName} onKeyPress={onNameKeyPressed} />\r\n                        <InputGroup.Append>\r\n                            <MyBtn onClick={toWelcomeOnClick} nameBtn={'Add'}/>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    <p>Количество имен {\r\n                        (Object.keys(arrNames[0]).length === 0) ?\r\n                            (arrNames.length - 1) :\r\n                            arrNames.length\r\n                    }\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Task3;","import React from \"react\";\r\nimport s from \"./MyCheckBox.module.css\"\r\n\r\ntype CheckBoxType = {\r\n    checked: boolean\r\n    onChange: (e: boolean) => void\r\n}\r\n\r\nconst MyCheckBox = (props: CheckBoxType) => (\r\n    <input\r\n        type=\"checkbox\"\r\n        className={s.checkbox}\r\n        checked={props.checked}\r\n        onChange={event => props.onChange(event.currentTarget.checked)}/>\r\n);\r\n\r\nexport default MyCheckBox;\r\n","import React, {useState} from \"react\";\r\nimport s from \"./Task4.module.css\"\r\nimport MyInput from \"../common/MyInput/MyInput\";\r\nimport MyBtn from \"../common/MyBtn/MyBtn\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport MyCheckBox from \"../common/MyCheckBox/MyCheckBox\";\r\n\r\nconst Task4 = () => {\r\n    let [testInput, setTestInput] = useState('');\r\n    let [testCheckBox, setTestCheckBox] = useState(false);\r\n    return (\r\n        <Container>\r\n            <h3>Task 4</h3>\r\n            <Row>\r\n                <Col xs={4} md={5}>\r\n                    <MyInput\r\n                        value={testInput}\r\n                        onChange={setTestInput}/>\r\n                    <MyInput\r\n                        value={testInput}\r\n                        onChange={setTestInput}\r\n                        error={true}/>\r\n                    <MyBtn\r\n                        onClick={() => {\r\n                        }}\r\n                        nameBtn={'Test'}/>\r\n                    <MyBtn\r\n                        onClick={() => {\r\n                        }}\r\n                        nameBtn={'Test'}\r\n                        styleBtn={'red'}/>\r\n                    <MyCheckBox\r\n                        checked={testCheckBox}\r\n                        onChange={setTestCheckBox}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Task4;","import React, {useState} from \"react\";\r\nimport Task1 from \"../Task1/Task1\";\r\nimport Task2 from \"../Task2/Task2\";\r\nimport Task3 from \"../Task3/Task3\";\r\nimport Task4 from \"../Task4/Task4\";\r\n\r\nexport type toDoType = {\r\n    id: number\r\n    n: string\r\n    p: string\r\n}\r\n\r\nconst PreJunior = () => {\r\n    const [toDoArr, setToDo] = useState([\r\n        {id: 1, n: \"Work\", p: \"hight\"},\r\n        {id: 2, n: \"Poker\", p: \"low\"},\r\n        {id: 3, n: \"Games\", p: \"middle\"},\r\n        {id: 4, n: \"React\", p: \"hight\"},\r\n        {id: 5, n: \"Redux\", p: \"middle\"}\r\n    ]);\r\n    function sortToDo(arr: Array<toDoType>) {\r\n\r\n        let newArr = arr.map(item => {\r\n            if (item.p === \"hight\") {\r\n                item.p = 'A';\r\n                return item\r\n            }\r\n            if (item.p === \"middle\") {\r\n                item.p = 'B';\r\n                return item\r\n            }\r\n            if (item.p === \"low\") {\r\n                item.p = 'C';\r\n                return item\r\n            }\r\n            return item\r\n        });\r\n        let toDoArrSort = newArr.sort((a: any, b: any) => a.p > b.p ? 1 : -1).map((item: toDoType) => {\r\n            if (item.p === 'A') {\r\n                item.p = \"hight\";\r\n                return item\r\n            }\r\n            if (item.p === 'B') {\r\n                item.p = \"middle\";\r\n                return item\r\n            }\r\n            if (item.p === 'C') {\r\n                item.p = \"low\";\r\n                return item\r\n            }\r\n            return item\r\n        });\r\n        setToDo(toDoArrSort)\r\n    }\r\n    function removeToDo(id: number) {\r\n        let filterTasks = toDoArr.filter(item => item.id !== id);\r\n        setToDo(filterTasks);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Task1 name='Artem' text='npm start нажимал?' time='20:00'/>\r\n            <Task2 toDo={toDoArr} sortToDo={sortToDo} removeToDo={removeToDo}/>\r\n            <Task3/>\r\n            <Task4/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PreJunior;","import React from \"react\";\r\n\r\nconst Junior = () => {\r\n    return <> <p>Junior</p></>\r\n};\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\nconst JuniorPlus = () => {\r\n    return <> <p>JuniorPlus</p></>\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react';\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport MyNavbar from \"./components/Navbar/MyNavbar\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport PreJunior from \"./components/pages/PreJunior\";\r\nimport Junior from \"./components/pages/Junior\";\r\nimport JuniorPlus from \"./components/pages/JuniorPlus\";\r\n\r\nconst App = () => (\r\n    <HashRouter>\r\n        <Container>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <MyNavbar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <Route path='/PreJunior' component={PreJunior}/>\r\n                    <Route path='/Junior' component={Junior}/>\r\n                    <Route path='/Junior+' component={JuniorPlus}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </HashRouter>\r\n);\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}